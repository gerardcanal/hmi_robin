#!/usr/bin/env python
# -*- coding: utf-8 -*-
#########################################################################################
#	                                _     						#
#	  __ _ ___ _ __   ___  ___  ___| |__  						#
#	 / _` / __| '_ \ / _ \/ _ \/ __| '_ \ 						#
#	| (_| \__ \ |_) |  __/  __/ (__| | | |						#
#	 \__, |___/ .__/ \___|\___|\___|_| |_|						#
#	 |___/    |_|                         						#
#											#
# ros package for speech recognition using Google Speech API				#
# run using 'rosrun gspeech gspeech.py'							#
# it creats and runs a node named gspeech						#
# the node gspeech publishes the topic /speech 		#
# the topic /speech contains the reconized speech string				#
#											#
#											#
# written by achuwilson									#
# 30-06-2012 , 3.00pm									#
# achu@achuwilson.in									#
# enhanced by Alexander Reiter, Institute of Robotics, JKU Linz
# February 2014
# alexander.reiter@jku.at
#########################################################################################
import roslib; roslib.load_manifest('gspeech') 
import rospy
import json
from std_msgs.msg import String
from std_msgs.msg import Int8
import shlex,subprocess,os
cmd1='sox -r 16000 -t alsa default recording.flac silence 1 0.01 0.5% 1 1.5 0.5%'
cmd2='wget -q -U "Mozilla/5.0" --post-file recording.flac --header="Content-Type: audio/x-flac; rate=16000" -O - "http://www.google.com/speech-api/v1/recognize?lang=en-US&client=chromium"'


def speech():
	rospy.init_node('gspeech')
	pubs = rospy.Publisher('speech_recognition', String)
	
	args2 = shlex.split(cmd2)
	
	os.system(cmd1)	
	output,error = subprocess.Popen(args2,stdout = subprocess.PIPE, stderr= subprocess.PIPE).communicate()
		
	if not error and len(output)>36:
		a = eval(output)
		print(a)
		status = int(a['status'])
		if status == 0:
			data=a['hypotheses'][0]['utterance']
			pubs.publish(String(data))
			rospy.loginfo(String(data)) 
	
	speech()	
	


if __name__ == '__main__':
	try:
		speech()
	except rospy.ROSInterruptException: pass
	except KeyboardInterrupt:
		sys.exit(1)
   
